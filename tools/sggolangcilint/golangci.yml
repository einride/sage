version: "2"

run:
  build-tags:
    - wireinject
  relative-path-mode: gomod

issues:
  fix: false

linters:
  default: none
  enable:
    # Check for pass []any as any in variadic func(...any).
    # [fast: false, auto-fix: false]
    - asasalint

    # Check that code does not contain non-ASCII identifiers.
    # [fast: true, auto-fix: false]
    - asciicheck

    # Checks for dangerous unicode character sequences.
    # [fast: true]
    - bidichk

    # Check whether HTTP response body is closed successfully.
    # [fast: false, auto-fix: false]
    - bodyclose

    # Copyloopvar is a linter detects places where loop variables are copied.
    # [fast: false, auto-fix: false]
    - copyloopvar

    # Check for two durations multiplied together.
    # [fast: false, auto-fix: false]
    - durationcheck

    # Check for unchecked errors. Unchecked errors can be critical bugs in some cases.
    # [fast: false, auto-fix: false]
    - errcheck

    # Checks types passed to the json encoding functions. Reports unsupported types and reports occurrences where the check for the returned error can be omitted.
    # [fast: false, autofix: false]
    - errchkjson

    # Check that sentinel errors are prefixed with the `Err` and error types are suffixed with the `Error`.
    # [fast: false, auto-fix: false]
    - errname

    # Find code that will cause problems with the error wrapping scheme introduced in Go 1.13.
    # [fast: false, auto-fix: false]
    - errorlint

    # Detects functions from golang.org/x/exp/ that can be replaced by std functions.
    # [fast: ?, auto-fix: true]
    - exptostd

    # Check that no global variables exist.
    # [fast: false, auto-fix: false]
    - gochecknoglobals

    # Check that no init functions are present in Go code.
    # [fast: true, auto-fix: false]
    - gochecknoinits

    # Check for bugs, performance and style issues.
    # [fast: false, auto-fix: false]
    - gocritic

    # Check if comments end in a period.
    # [fast: true, auto-fix: true]
    - godot

    # Manage the use of 'replace', 'retract', and 'excludes' directives in go.mod.
    # [fast: true, auto-fix: false]
    - gomoddirectives

    # Allow and block list linter for direct Go module dependencies. This is different from depguard where there are different block types for example version constraints and module recommendations.
    # [fast: true, auto-fix: false]
    - gomodguard

    # Check that printf-like functions are named with `f` at the end.
    # [fast: true, auto-fix: false]
    - goprintffuncname

    # Inspects source code for security problems.
    # [fast: false, auto-fix: false]
    - gosec

    # Report suspicious constructs, such as Printf calls whose arguments do not align with the format string.
    # [fast: false, auto-fix: false]
    - govet

    # Detect when assignments to existing variables are not used.
    # [fast: true, auto-fix: false]
    - ineffassign

    # Report long lines.
    # [fast: true, auto-fix: false]
    - lll

    # Find slice declarations with non-zero initial length.
    # [fast: false, auto-fix: false]
    - makezero

    # Find commonly misspelled English words in comments.
    # [fast: true, auto-fix: true]
    - misspell

    # Find naked returns in functions greater than a specified function length.
    # [fast: true, auto-fix: false]
    - nakedret

    # Find the code that returns nil even if it checks that the error is not nil.
    # [fast: false, auto-fix: false]
    - nilerr

    # Finds sending http request without context.Context.
    # [fast: false, auto-fix: false]
    - noctx

    # Report ill-formed or insufficient nolint directives.
    # [fast: true, auto-fix: false]
    - nolintlint

    # Find slice declarations that could potentially be preallocated.
    # [fast: true, auto-fix: false]
    - prealloc

    # Find code that shadows one of Go's predeclared identifiers.
    # [fast: true, auto-fix: false]
    - predeclared

    # Check Prometheus metrics naming via promlint.
    # [fast: true, auto-fix: false]
    - promlinter

    # Reports direct reads from proto message fields when getters should be used.
    # [fast: false, auto-fix: true]
    - protogetter

    # Fast, configurable, extensible, flexible, and beautiful linter for Go. Drop-in replacement of golint.
    # [fast: false, auto-fix: true]
    - revive

    # Check whether Err of rows is checked successfully.
    # [fast: false, auto-fix: false]
    - rowserrcheck

    # Ensure consistent code style when using log/slog.
    # [fast: false, auto-fix: false]
    - sloglint

    # Checks for mistakes with OpenTelemetry/Census spans.
    # [fast: false, auto-fix: false]
    - spancheck

    # Check that sql.Rows and sql.Stmt are closed.
    # [fast: false, auto-fix: false]
    - sqlclosecheck

    # Go vet on steroids, applying a ton of static analysis checks.
    # [fast: false, auto-fix: false]
    - staticcheck

    # Detect inappropriate usage of t.Parallel() method in your Go test codes.
    # [fast: false, auto-fix: false]
    - tparallel

    # Remove unnecessary type conversions.
    # [fast: false, auto-fix: false]
    - unconvert

    # Check Go code for unused constants, variables, functions and types.
    # [fast: false, auto-fix: false]
    - unused

    # A linter that detect the possibility to use variables/constants from the Go standard library.
    # [fast: true, auto-fix: true]
    - usestdlibvars

    # Find wasted assignment statements.
    # [fast: false, auto-fix: false]
    - wastedassign

    # Detect leading and trailing whitespace.
    # [fast: true, auto-fix: true]
    - whitespace
  settings:
    errorlint:
      errorf: false

    gomoddirectives:
      replace-local: true

    gomodguard:
      blocked:
        modules:
          - github.com/sirupsen/logrus:
              recommendations:
                - go.uber.org/zap
              reason: Use Zap for logging.
          - github.com/rs/zerolog:
              recommendations:
                - go.uber.org/zap
              reason: Use Zap for logging.
          - github.com/pkg/errors:
              recommendations:
                - errors
                - fmt
              reason: Use the standard library error packages.
          - golang.org/x/xerrors:
              recommendations:
                - errors
                - fmt
              reason: Use the standard library error packages.
          - github.com/golang/protobuf:
              recommendations:
                - google.golang.org/protobuf
              reason: The protobuf v1 module is deprecated.
          - github.com/stretchr/testify:
              recommendations:
                - gotest.tools/v3
              reason: More reliably supports protobuf messages.

    gosec:
      excludes:
        - G115

    lll:
      line-length: 120
      tab-width: 1

    misspell:
      locale: US
      ignore-rules:
        - cancelled
        - cancelling
        - analyses

    prealloc:
      simple: true
      range-loops: true
      for-loops: true

    protogetter:
      skip-any-generated: true

    staticcheck:
      checks:
        - all

  exclusions:
    generated: lax
    presets:
      - comments
      - common-false-positives
      - legacy
      - std-error-handling
    paths:
      - .git
      - node_modules
      - third_party$
      - builtin$
      - examples$
