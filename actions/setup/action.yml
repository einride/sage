name: Setup Sage
description: Setup Sage, including caching of tools and Go modules.

inputs:
  cacheKey:
    description: Custom cache key used
    required: false
    default: cachekey

  disableCache:
    description: Disable cache
    required: false
    default: 'false'

  go-version:
    description: The Go version to download (if necessary) and use. Supports semver spec and ranges.
    required: false
    default: '1.24'

  go-version-file:
    description: 'Path to the go.mod or go.work file.'
    required: false

  check-latest:
    description: If true, checks whether the cached go version is the latest, if not then downloads the latest. Useful when you need to use the latest version.
    required: false
    default: 'false'

  fetch-depth:
    description: Number of commits to fetch. 0 indicates all history for all branches and tags.
    default: '0'

  checkout-submodules:
    description: "Whether to checkout submodules: `true` to checkout submodules or `recursive` to recursively checkout submodules."
    default: ''

runs:
  using: composite

  steps:
    - name: Checkout
      uses: actions/checkout@v5
      with:
        # Needed for conventional commit linting.
        fetch-depth: ${{ inputs.fetch-depth }}
        submodules: ${{ inputs.checkout-submodules }}

    - name: Set up Go
      id: setup-go
      if: ${{ inputs.go-version-file == '' }}
      uses: actions/setup-go@v6
      with:
        go-version: ${{ inputs.go-version }}
        check-latest: ${{ inputs.check-latest }}
        cache: false # cache is handled by separate actions/cache step, see https://github.com/actions/setup-go/issues/358

    - name: Set up Go using go version file
      id: setup-go-from-file
      if: ${{ inputs.go-version-file != '' }}
      uses: actions/setup-go@v6
      with:
        go-version-file: ${{ inputs.go-version-file }}
        check-latest: ${{ inputs.check-latest }}
        cache: false # cache is handled by separate actions/cache step, see https://github.com/actions/setup-go/issues/358

    - name: Prepare Go version cache key
      id: cache-go-version
      shell: bash
      run: |
        if [ -n "${{ steps.setup-go-from-file.outputs.go-version }}" ]; then
          VERSION="${{ steps.setup-go-from-file.outputs.go-version }}"
        else
          VERSION="${{ steps.setup-go.outputs.go-version }}"
        fi
        echo "Go version for cache key: $VERSION"
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Prepare cache key
      id: cache-key
      shell: bash
      run: |
        if [ "${{ inputs.cacheKey }}" != "cachekey" ]; then
          # Respect non-default input from calling workflow
          CACHE_KEY="${{ inputs.cacheKey }}"
        else
          # Prevent cache thrashing, where fastest workflow (with likely least amount of dependencies) writes the cache
          # Replace spaces with dashes using bash parameter expansion
          CACHE_KEY="${{ github.workflow }}"
          CACHE_KEY="${CACHE_KEY// /-}"
        fi
        echo "key=$CACHE_KEY" >> $GITHUB_OUTPUT
        echo "Using cache key: $CACHE_KEY"

    - name: Set KOCACHE environment variable
      shell: bash
      run: echo "KOCACHE=/home/runner/.ko/cache" >> $GITHUB_ENV

    - name: Set up cache
      if: ${{ inputs.disableCache != 'true' }}
      uses: actions/cache@v4
      with:
        path: |
          ./.sage/tools
          ./.sage/bin
          /home/runner/.cache/go-build
          /home/runner/.cache/golangci-lint
          /home/runner/go/pkg/mod
          /home/runner/go/bin
          /home/runner/.ko/cache
        key: ${{ runner.os }}-${{ steps.cache-key.outputs.key }}-${{ steps.cache-go-version.outputs.version }}-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-${{ steps.cache-key.outputs.key }}-${{ steps.cache-go-version.outputs.version }}-
          ${{ runner.os }}-${{ steps.cache-key.outputs.key }}-
